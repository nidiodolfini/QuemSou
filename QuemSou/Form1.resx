<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        86MwdK+sAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA0UFAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRwbDA2mnqUNu6vHDRoZCgAA
        AAAAAAAAAAAAAIrZzVoKv53tBVlIXgACAgIAAAAAAAAAAAAAAAAAAAAAABwaGA61rsci2NH7AMy3+wAY
        FhIAAAAAAAAAAAAAAACI1dFMDtXM/xHRwv8BlYKrABcVEgAAAAAAAAAAAS0nLAK0pssMVFJMF9DJ8wKd
        ibcAAAAAAAAAAAAAAAAAAAAAiJCPBgG0q78aZ2VgKtPO7wPAseMAQjw+CDsiRgamh8sAKigoAk5LUAPR
        xP8DT0FYAAAAAAAAAAAAAAAAAAAAAAAAAAABaGNsAEtGTAgjIxwwsK65FdXL/RG0e+cBHxkaAAAAAACP
        hqMFyK/5ABEPDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCgWkmq0ACggGAoFvkR2hnaso1M/zB7Wk0wE5
        MTYDtpLpBpRzuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHaGJoFKNtywJRQVwAAAACBiYlICet
        qbcW08X9Dr+S/wtWNm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANzMyAKWVsxWjl6kABwYGAAAAAAAA
        AAAAAgICG46KlSXZ0v8EuavXAEE7PgAAAAAAAAAAAAAAAAAAAACIm5oMBLyyyQAYFhILPjw4DWhhagAA
        AAAAAAAAAAAAABKalakDxbbpIJOQmRLVy/0AkomdABgXFgAAAAAAAAAAAAAAAAEmJCADYlNqB3FXeBy7
        qssHNB0+ARIMEAAAAAIWy8PhAJqOrwAAAAANQkE8HcC61QLLwO8Aa2VuUVxbBgAAAAAAAAAAAAAAAAAA
        AAIDKykiGriaywaJaqMGrpu9GNfP/w2leNULckebBnVbiwZ+dJEW18//A9PI/2na15MAAAAAAAAAAAAA
        AAAAAAAAAAAAAApOS0oFWFJUEUVEQgrUy/8EaVh0AUY5VABYU2gAbWhwAG9pcAxcWWZbdXUgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACC4d+hxmQipcA08j/ACwqJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDgwBvLLXCNHI9QAICAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbpSSJoTNzFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAL+HAAAPBwAABg8AAAAPAACAjwAAgB8AAMAfAACGDwAABwMAAIAgAADgAAAA+AAAAPg/
        AAD8PwAA/n8AAA==
</value>
  </data>
</root>