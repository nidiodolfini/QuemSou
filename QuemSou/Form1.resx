<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA0UFAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRwbDA2mnqUNu6vHDRoZCgAA
        AAAAAAAAAAAAAIrZzVoKv53tBVlIXgACAgIAAAAAAAAAAAAAAAAAAAAAABwaGA61rsci2NH7AMy3+wAY
        FhIAAAAAAAAAAAAAAACI1dFMDtXM/xHRwv8BlYKrABcVEgAAAAAAAAAAAS0nLAK0pssMVFJMF9DJ8wKd
        ibcAAAAAAAAAAAAAAAAAAAAAiJCPBgG0q78aZ2VgKtPO7wPAseMAQjw+CDsiRgamh8sAKigoAk5LUAPR
        xP8DT0FYAAAAAAAAAAAAAAAAAAAAAAAAAAABaGNsAEtGTAgjIxwwsK65FdXL/RG0e+cBHxkaAAAAAACP
        hqMFyK/5ABEPDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCgWkmq0ACggGAoFvkR2hnaso1M/zB7Wk0wE5
        MTYDtpLpBpRzuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHaGJoFKNtywJRQVwAAAACBiYlICet
        qbcW08X9Dr+S/wtWNm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANzMyAKWVsxWjl6kABwYGAAAAAAAA
        AAAAAgICG46KlSXZ0v8EuavXAEE7PgAAAAAAAAAAAAAAAAAAAACIm5oMBLyyyQAYFhILPjw4DWhhagAA
        AAAAAAAAAAAAABKalakDxbbpIJOQmRLVy/0AkomdABgXFgAAAAAAAAAAAAAAAAEmJCADYlNqB3FXeBy7
        qssHNB0+ARIMEAAAAAIWy8PhAJqOrwAAAAANQkE8HcC61QLLwO8Aa2VuUVxbBgAAAAAAAAAAAAAAAAAA
        AAIDKykiGriaywaJaqMGrpu9GNfP/w2leNULckebBnVbiwZ+dJEW18//A9PI/2na15MAAAAAAAAAAAAA
        AAAAAAAAAAAAAApOS0oFWFJUEUVEQgrUy/8EaVh0AUY5VABYU2gAbWhwAG9pcAxcWWZbdXUgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACC4d+hxmQipcA08j/ACwqJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDgwBvLLXCNHI9QAICAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbpSSJoTNzFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAL+HAAAPBwAABg8AAAAPAACAjwAAgB8AAMAfAACGDwAABwMAAIAgAADgAAAA+AAAAPg/
        AAD8PwAA/n8AAA==
</value>
  </data>
</root>